plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
}

ext {
    lombokVersion = '1.18.20'
    h2Version = '2.1.214'
}

group = 'com.shoeshop'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly "com.h2database:h2:${h2Version}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

// OpenAPI Generator configuration
openApiGenerate {
    generatorName = 'java'
    inputSpec = "$projectDir/src/main/resources/inventory-service-api.json"  // URL of your inventory-service's OpenAPI spec
    outputDir = "$buildDir/generated-sources/openapi"
    apiPackage = 'com.shoeshop.product.api'  // Package for API classes
    modelPackage = 'com.shoeshop.product.model'  // Package for model classes
    invokerPackage = 'com.shoeshop.product.invoker'  // Package for invoker classes
    configOptions = [
        dateLibrary: 'java8'  // Use java8 date types
    ]
}

compileJava.dependsOn tasks.named("openApiGenerate")

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated-sources/openapi/src/main/java"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
